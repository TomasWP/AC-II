#include <detpic32.h>

int main(void){

        volatile int aux;
        TRISDbits.TRISD11 = 0;            //  Configure RD11 as a digital output
        
        // Block of code always the same changing only values from samples and the analog input
	AD1CON1bits.SSRC = 7;		// Always the same code
	AD1CON1bits.CLRASAM = 1;	// Always the same code
	AD1CON3bits.SAMC = 16;		// Always the same code
	AD1CHSbits.CH0SA = 4;		// Always the same code only change value o to 15(Select AN4 as input for the A/D converter)
	AD1CON2bits.SMPI = 0;		// Always the same code only change value N-1(1 sample will be converted and stored)
	AD1CON1bits.ON = 1;		// Always the same code (Enable A/D Converter)
	
	while(1){
		AD1CON1bits.ASAM = 1;		// Start A/D Conversion
		LATDbits.LATD11 = 1;            // Set D11 to value 1
		while (IFS1bits.AD1IF == 0);	// Wait while conversion not done
		LATDbits.LATD11 = 0;            // Reset D11
		aux = ADC1BUF0;                 // Read conversion result (ADC1BUF0) to aux variable
	        IFS1bits.AD1IF = 0;		// Reset AD1IF bit
	}
	return 0;
}

// Output de RD11( INT4 na placa) = 3.3 us (microsegundos)
